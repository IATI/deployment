---
- hosts: datastore-dev
  remote_user: root
  gather_facts: false

  environment:
    DATABASE_URL: postgres:///iati-datastore


  tasks:

  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

  - name: Create a datastore user
    user:
      name: datastore
      comment: "Datastore Account"
      createhome: yes

  - name: Install Datastore dependencies
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
       - git
       - postgresql
       - redis-server
       - python-pip
       - libpq-dev
       - libxml2-dev
       - libxslt-dev
       - python-dev
       - libevent-dev
       - apache2
       - libapache2-mod-wsgi

  - name: Enable mod_headers
    apache2_module:
      name: headers
      state: present

  - name: Enable mod_rewrite
    apache2_module:
      name: rewrite
      state: present


  - name: Clone the repository
    git:
      repo: https://github.com/IATI/IATI-Datastore.git
      dest: /home/datastore/IATI-Datastore
      update: yes
    become: yes
    become_user: datastore

  - name: Copy the datastore.wsgi file
    copy:
      remote_src: yes
      src: /home/datastore/IATI-Datastore/datastore.wsgi
      dest: /home/datastore/datastore.wsgi
      owner: datastore
      group: datastore

  - name: Install requirements via pip
    pip:
      chdir: /home/datastore/IATI-Datastore
      requirements: requirements_dev.txt

  - name: Create postgres role for datastore user
    postgresql_user:
      name: datastore
    become: true
    become_user: postgres

# test if this is necessary
  - name: Create postgres role for root user
    postgresql_user:
      name: root
    become: true
    become_user: postgres

  - name: Create postgres database 'iati-datastore'
    become: true
    become_user: postgres
    postgresql_db:
      name: iati-datastore
      encoding: UTF-8
      owner: datastore

  - name: Set environment variable to link to the postgres database
    lineinfile:
      dest: /etc/environment
      line: "export DATABASE_URL=postgres:///iati-datastore"

  - name: Create the iati-datastore tables
    command: iati create_database

  - name: Grant the datastore user access to all database tables
    become: true
    become_user: postgres
    command: psql -d iati-datastore -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO datastore;"

  - name: Grant the datastore user access to all database sequences
    become: true
    become_user: postgres
    command: psql -d iati-datastore -c "GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO datastore;"

# iati queue background requires this to run
  - cron:
      name: PATH
      env: yes
      value: /usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
      user: datastore

# test whether this is necessary
  - cron:
      name: DATABASE_URL
      env: yes
      value: postgres:///iati-datastore
      user: datastore
      insertafter: PATH

  - cron:
      name: "Update source data with crawler"
      job: "iati crawl update"
      minute: "30"
      hour: "0-23/5"
      user: datastore

  - cron:
      name: "Start worker to download and index datafiles"
      special_time: reboot
      job: "sleep 2m; iati queue background"
      user: datastore

  - name: Copy apache2 config file to sites-available
    copy:
      remote_src: no
      src: apache2.conf
      dest: /etc/apache2/sites-available/000-default.conf
      owner: root
      group: root
      mode: 0644
    notify: restart apache

  - name: Enable default site with apache2
    command: a2ensite 000-default
    args:
      creates: /etc/apache2/sites-enabled/000-default.conf
    notify: restart apache

  - name: Add datastore group
    group:
      name: datastore
      state: present

  - name: Add www-data to datastore group
    user:
      name: www-data
      group: datastore

  - name: Restart server
    become: yes
    shell: sleep 2 && reboot
    async: 1
    poll: 0

  - name: Wait 30 seconds for server to come back
    local_action: wait_for host={{ inventory_hostname }} port=22 delay=20 connect_timeout=200

  - name: "Update source data with crawler"
    become: true
    become_user: datastore
    command: "iati crawl update"

  handlers:
    - name: restart apache
      service:
        name: apache2
        state: restarted
